{"ast":null,"code":"var _jsxFileName = \"/home/victoria/projects/data-table/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './styles/App.css';\nimport Table from './components/Table';\nimport MyButton from './components/UI/button/MyButton.jsx';\nimport MyInput from './components/UI/input/MyInput.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tableCells, setTableCells] = useState([{\n    id: 1,\n    date: \"12/09/2021\",\n    title: \"Bread\",\n    quantity: \"5\",\n    distance: \"12\"\n  }, {\n    id: 2,\n    date: \"15/09/2021\",\n    title: \"Eggs\",\n    quantity: \"10\",\n    distance: \"5\"\n  }, {\n    id: 3,\n    date: \"18/09/2021\",\n    title: \"Milk\",\n    quantity: \"2\",\n    distance: \"7\"\n  }]);\n  const [newCells, setNewCells] = useState({\n    date: '',\n    title: '',\n    quantity: '',\n    distance: ''\n  });\n\n  const addNewTableCell = e => {\n    e.preventDefault();\n    setTableCells([...tableCells, { ...newCells,\n      id: Date.now()\n    }]);\n    setNewCells({\n      date: \"\",\n      title: \"\",\n      quantity: \"\",\n      distance: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(MyInput, {\n        type: \"text\",\n        value: newCells.date,\n        onChange: e => setNewCells({ ...newCells,\n          date: e.target.value\n        }),\n        placeholder: \"\\u0414\\u0430\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n        type: \"text\",\n        value: newCells.title,\n        onChange: e => setNewCells({ ...newCells,\n          title: e.target.value\n        }),\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n        type: \"text\",\n        value: newCells.quantity,\n        onChange: e => setNewCells({ ...newCells,\n          quantity: e.target.value\n        }),\n        placeholder: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n        type: \"text\",\n        value: newCells.distance,\n        onChange: e => setNewCells({ ...newCells,\n          distance: e.target.value\n        }),\n        placeholder: \"\\u0420\\u0430\\u0441\\u0441\\u0442\\u043E\\u044F\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n        onClick: addNewTableCell,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      tableCells: tableCells\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vEUOYEJKJZ8W2R0i4K4hfU7jZPU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/victoria/projects/data-table/src/App.js"],"names":["React","useState","Table","MyButton","MyInput","App","tableCells","setTableCells","id","date","title","quantity","distance","newCells","setNewCells","addNewTableCell","e","preventDefault","Date","now","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport './styles/App.css'\nimport Table from './components/Table'\nimport MyButton from './components/UI/button/MyButton.jsx'\nimport MyInput from './components/UI/input/MyInput.jsx'\n\nfunction App() {\n\n  const [tableCells, setTableCells] = useState([\n    {\n      id: 1,\n      date: \"12/09/2021\",\n      title: \"Bread\",\n      quantity: \"5\",\n      distance: \"12\",\n    },\n    {\n      id: 2,\n      date: \"15/09/2021\",\n      title: \"Eggs\",\n      quantity: \"10\",\n      distance: \"5\",\n    },\n    {\n      id: 3,\n      date: \"18/09/2021\",\n      title: \"Milk\",\n      quantity: \"2\",\n      distance: \"7\",\n    },\n  ]);\n\nconst [newCells, setNewCells] = useState({date: '', title: '', quantity: '', distance: ''})\n\nconst addNewTableCell = (e) => {\n  e.preventDefault()\n  setTableCells([...tableCells, {...newCells, id: Date.now()}])\n  setNewCells({ date: \"\", title: \"\", quantity: \"\", distance: \"\" });\n}\n\n  return (\n    <div className=\"App\">\n      <form>\n        <MyInput\n          type=\"text\"\n          value={newCells.date}\n          onChange={(e) => setNewCells({ ...newCells, date: e.target.value })}\n          placeholder=\"Дата\"\n        />\n        <MyInput\n          type=\"text\"\n          value={newCells.title}\n          onChange={(e) => setNewCells({ ...newCells, title: e.target.value })}\n          placeholder=\"Название\"\n        />\n        <MyInput\n          type=\"text\"\n          value={newCells.quantity}\n          onChange={(e) =>\n            setNewCells({ ...newCells, quantity: e.target.value })\n          }\n          placeholder=\"Количество\"\n        />\n        <MyInput\n          type=\"text\"\n          value={newCells.distance}\n          onChange={(e) => setNewCells({ ...newCells, distance: e.target.value })}\n          placeholder=\"Расстояние\"\n        />\n        <MyButton onClick={addNewTableCell}>Добавить</MyButton>\n      </form>\n      <Table tableCells={tableCells} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}