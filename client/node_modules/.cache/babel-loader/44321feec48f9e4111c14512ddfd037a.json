{"ast":null,"code":"var _jsxFileName = \"/home/victoria/projects/data-table/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './styles/App.css';\nimport Table from './components/Table'; // import MyButton from './components/UI/button/MyButton.jsx'\n\nimport MyInput from './components/UI/input/MyInput.jsx';\nimport InputForm from './components/InputForm';\nimport MySelect from './components/UI/select/MySelect';\nimport source from '../cars.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dataset = source.map(it => ({\n    id: it.id,\n    date: it.date,\n    title: it.title,\n    quantity: it.quantity,\n    distance: it.distance\n  }));\n  const [tableCells, setTableCells] = useState(dataset);\n  const [selectedColumn, setSelectedColumn] = useState('');\n  const [searchQuery, setSearchQuery] = useState(''); // const sorted\n\n  const createNewCell = newCell => {\n    setTableCells([...tableCells, newCell]);\n  };\n\n  const sortColumns = column => {\n    setSelectedColumn(column);\n    setTableCells([...tableCells].sort((a, b) => a[column] > b[column])); //a[column].localeCompare(b[column]))) или а - b для цифр\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(InputForm, {\n      create: createNewCell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MyInput, {\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        placeholder: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n        value: selectedColumn,\n        onChange: sortColumns,\n        defaultValue: \"\\u0412\\u044B\\u0431\\u043E\\u0440 \\u043A\\u043E\\u043B\\u043E\\u043D\\u043A\\u0438\",\n        options: [{\n          value: \"title\",\n          name: \"Название\"\n        }, {\n          value: \"quantity\",\n          name: \"Количество\"\n        }, {\n          value: \"distance\",\n          name: \"Расстояние\"\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n        value: selectedColumn,\n        onChange: sortColumns,\n        defaultValue: \"\\u0412\\u044B\\u0431\\u043E\\u0440 \\u0443\\u0441\\u043B\\u043E\\u0432\\u0438\\u044F\",\n        options: [{\n          value: \"title\",\n          name: \"Равно\"\n        }, {\n          value: \"quantity\",\n          name: \"Содержит\"\n        }, {\n          value: \"distance\",\n          name: \"Больше\"\n        }, {\n          value: \"distance\",\n          name: \"Меньше\"\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      tableCells: tableCells\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mUiV33pd9bvJUa5p0q6ITSmG+Y8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/victoria/projects/data-table/client/src/App.js"],"names":["React","useState","Table","MyInput","InputForm","MySelect","source","App","dataset","map","it","id","date","title","quantity","distance","tableCells","setTableCells","selectedColumn","setSelectedColumn","searchQuery","setSearchQuery","createNewCell","newCell","sortColumns","column","sort","a","b","e","target","value","name"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport './styles/App.css'\nimport Table from './components/Table'\n// import MyButton from './components/UI/button/MyButton.jsx'\nimport MyInput from './components/UI/input/MyInput.jsx'\nimport InputForm from './components/InputForm'\nimport MySelect from './components/UI/select/MySelect';\n\nimport source from '../cars.json'\n\nfunction App() {\n\n  const dataset = source.map(it => ({\n    id: it.id,\n    date: it.date,\n    title: it.title,\n    quantity: it.quantity,\n    distance: it.distance\n  }))\n\n  const [tableCells, setTableCells] = useState(dataset);\n\n  const [selectedColumn, setSelectedColumn] = useState('')\n  const [searchQuery, setSearchQuery] = useState('')\n\n  // const sorted\n\n  const createNewCell = (newCell) => {\n    setTableCells([...tableCells, newCell])\n  }\n\n  const sortColumns = (column) => {\n    setSelectedColumn(column)\n    setTableCells([...tableCells].sort((a, b) => a[column] > b[column])) //a[column].localeCompare(b[column]))) или а - b для цифр\n  }\n\n  return (\n    <div className=\"App\">\n      <InputForm create={createNewCell} />\n      <div>\n        <MyInput value={searchQuery} onChange={e=> setSearchQuery(e.target.value)} placeholder=\"Сортировать по\"/>\n        <MySelect\n          value={selectedColumn}\n          onChange={sortColumns}\n          defaultValue=\"Выбор колонки\"\n          options={[\n            { value: \"title\", name: \"Название\" },\n            { value: \"quantity\", name: \"Количество\" },\n            { value: \"distance\", name: \"Расстояние\" },\n          ]}\n        />\n        <MySelect\n          value={selectedColumn}\n          onChange={sortColumns}\n          defaultValue=\"Выбор условия\"\n          options={[\n            { value: \"title\", name: \"Равно\" },\n            { value: \"quantity\", name: \"Содержит\" },\n            { value: \"distance\", name: \"Больше\" },\n            { value: \"distance\", name: \"Меньше\" },\n          ]}\n        />\n      </div>\n      <Table tableCells={tableCells} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}