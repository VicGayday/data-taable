{"ast":null,"code":"var _jsxFileName = \"/home/victoria/projects/data-table/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from 'react';\nimport './styles/App.css';\nimport Table from './components/Table'; // import MyButton from './components/UI/button/MyButton.jsx'\n\nimport MyInput from './components/UI/input/MyInput.jsx';\nimport InputForm from './components/InputForm';\nimport MySelect from './components/UI/select/MySelect';\nimport source from './cars.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dataset = source.map(it => ({\n    id: it.id,\n    date: it.date,\n    title: it.title,\n    quantity: it.quantity,\n    distance: it.distance\n  }));\n  const [tableCells, setTableCells] = useState(dataset);\n  const [selectedColumn, setSelectedColumn] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const sortedCells = useMemo(() => {\n    return selectedColumn ? [...tableCells].sort((a, b) => a[selectedColumn] >= b[selectedColumn]) : tableCells;\n  }, [selectedColumn, tableCells]);\n\n  const createNewCell = newCell => {\n    setTableCells([...tableCells, newCell]);\n  };\n\n  const sortColumns = column => {\n    setSelectedColumn(column);\n  };\n\n  const more = searchQuery > selectedColumn;\n  const less = searchQuery < selectedColumn;\n  const includes = searchQuery.includes(selectedColumn);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(InputForm, {\n      create: createNewCell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MyInput, {\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        placeholder: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n        value: selectedColumn,\n        onChange: sortColumns,\n        defaultValue: \"\\u0412\\u044B\\u0431\\u043E\\u0440 \\u043A\\u043E\\u043B\\u043E\\u043D\\u043A\\u0438\",\n        options: [{\n          value: \"title\",\n          name: \"Название\"\n        }, {\n          value: \"quantity\",\n          name: \"Количество\"\n        }, {\n          value: \"distance\",\n          name: \"Расстояние\"\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n        value: selectedColumn,\n        onChange: sortColumns,\n        defaultValue: \"\\u0412\\u044B\\u0431\\u043E\\u0440 \\u0443\\u0441\\u043B\\u043E\\u0432\\u0438\\u044F\",\n        options: [{\n          value: {\n            searchQuery\n          },\n          name: \"Равно\"\n        }, {\n          value: {\n            includes\n          },\n          name: \"Содержит\"\n        }, {\n          value: {\n            more\n          },\n          name: \"Больше\"\n        }, {\n          value: {\n            less\n          },\n          name: \"Меньше\"\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      tableCells: sortedCells\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"h/MC41+/ZZLcNLmtSiNEqcLHiXI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/victoria/projects/data-table/client/src/App.js"],"names":["React","useState","useMemo","Table","MyInput","InputForm","MySelect","source","App","dataset","map","it","id","date","title","quantity","distance","tableCells","setTableCells","selectedColumn","setSelectedColumn","searchQuery","setSearchQuery","sortedCells","sort","a","b","createNewCell","newCell","sortColumns","column","more","less","includes","e","target","value","name"],"mappings":"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","sourcesContent":["import React, {useState, useMemo} from 'react'\nimport './styles/App.css'\nimport Table from './components/Table'\n// import MyButton from './components/UI/button/MyButton.jsx'\nimport MyInput from './components/UI/input/MyInput.jsx'\nimport InputForm from './components/InputForm'\nimport MySelect from './components/UI/select/MySelect';\n\nimport source from './cars.json'\n\nfunction App() {\n\n  const dataset = source.map(it => ({\n    id: it.id,\n    date: it.date,\n    title: it.title,\n    quantity: it.quantity,\n    distance: it.distance\n  }))\n\n  const [tableCells, setTableCells] = useState(dataset);\n\n  const [selectedColumn, setSelectedColumn] = useState('')\n  const [searchQuery, setSearchQuery] = useState('')\n\n  const sortedCells = useMemo(() => {\n    return selectedColumn\n      ? [...tableCells].sort((a, b) => a[selectedColumn] >= b[selectedColumn])\n      : tableCells;\n  }, [selectedColumn, tableCells])\n\n\n  const createNewCell = (newCell) => {\n    setTableCells([...tableCells, newCell])\n  }\n\n  const sortColumns = (column) => {\n    setSelectedColumn(column)\n  }\n\n  const more = searchQuery > selectedColumn\n  const less = searchQuery < selectedColumn\n  const includes = searchQuery.includes(selectedColumn)\n\n  return (\n    <div className=\"App\">\n      <InputForm create={createNewCell} />\n      <div>\n        <MyInput\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          placeholder=\"Сортировать по\"\n        />\n        <MySelect\n          value={selectedColumn}\n          onChange={sortColumns}\n          defaultValue=\"Выбор колонки\"\n          options={[\n            { value: \"title\", name: \"Название\" },\n            { value: \"quantity\", name: \"Количество\" },\n            { value: \"distance\", name: \"Расстояние\" },\n          ]}\n        />\n        <MySelect\n          value={selectedColumn}\n          onChange={sortColumns}\n          defaultValue=\"Выбор условия\"\n          options={[\n            { value: {searchQuery}, name: \"Равно\" },\n            { value: {includes}, name: \"Содержит\" },\n            { value: {more}, name: \"Больше\" },\n            { value: {less}, name: \"Меньше\" },\n          ]}\n        />\n      </div>\n      <Table tableCells={sortedCells} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}