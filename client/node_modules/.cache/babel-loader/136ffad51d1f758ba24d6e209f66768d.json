{"ast":null,"code":"var _jsxFileName = \"/home/victoria/projects/data-table/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo, useEffect } from 'react';\nimport axios from 'axios';\nimport './styles/App.css';\nimport Table from './components/Table';\nimport InputForm from './components/InputForm';\nimport SortCells from './components/SortCells'; // import source from './cars.json'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const dataset = source.map(it => ({\n  //   id: it.id,\n  //   date: it.date,\n  //   title: it.title,\n  //   quantity: it.quantity,\n  //   distance: it.distance\n  // }))\n  const [tableCells, setTableCells] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  }); // const [selectedColumn, setSelectedColumn] = useState('')\n  // const [searchQuery, setSearchQuery] = useState('')\n\n  const sortedCells = useMemo(() => {\n    return filter.sort ? [...tableCells].sort((a, b) => a[filter.sort] >= b[filter.sort]) : tableCells;\n  }, [filter.sort, tableCells]); // const sortedAndSearchedCells = useMemo(() => {\n  //   return sortedCells.filter(tableCell => tableCell.title.includes(searchQuery))\n  // }, [searchQuery, sortedCells])\n\n  const createNewCell = newCell => {\n    setTableCells([...tableCells, newCell]);\n  };\n\n  async function getData() {\n    const response = await axios(\"https://my.api.mockaroo.com/cars.json?key=d8c66fd0\");\n    setTableCells(response.data);\n  }\n\n  useEffect(() => {\n    getData();\n  }, []); // const sortColumns = (column) => {\n  //   setSelectedColumn(column)\n  // }\n  // const more = searchQuery > selectedColumn\n  // const less = searchQuery < selectedColumn\n  // const includes = searchQuery.includes(selectedColumn)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(InputForm, {\n      create: createNewCell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SortCells, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      tableCells: sortedCells\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9HRYsZ4oscJLlDoGy+rzUBBKYfY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/victoria/projects/data-table/client/src/App.js"],"names":["React","useState","useMemo","useEffect","axios","Table","InputForm","SortCells","App","tableCells","setTableCells","filter","setFilter","sort","query","sortedCells","a","b","createNewCell","newCell","getData","response","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,OAAzB,EAAkCC,SAAlC,QAAkD,OAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB,C,CAGA;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC;AAACY,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,KAAK,EAAE;AAAlB,GAAD,CAApC,CAXa,CAab;AACA;;AAEA,QAAMC,WAAW,GAAGb,OAAO,CAAC,MAAM;AAChC,WAAOS,MAAM,CAACE,IAAP,GACH,CAAC,GAAGJ,UAAJ,EAAgBI,IAAhB,CAAqB,CAACG,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACL,MAAM,CAACE,IAAR,CAAD,IAAkBI,CAAC,CAACN,MAAM,CAACE,IAAR,CAAlD,CADG,GAEHJ,UAFJ;AAGD,GAJ0B,EAIxB,CAACE,MAAM,CAACE,IAAR,EAAcJ,UAAd,CAJwB,CAA3B,CAhBa,CAsBb;AACA;AACA;;AAGA,QAAMS,aAAa,GAAIC,OAAD,IAAa;AACjCT,IAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBU,OAAhB,CAAD,CAAb;AACD,GAFD;;AAIA,iBAAeC,OAAf,GAAyB;AACvB,UAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAC1B,oDAD0B,CAA5B;AAGAM,IAAAA,aAAa,CAACW,QAAQ,CAACC,IAAV,CAAb;AACD;;AAEDnB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT,CAtCa,CA0Cb;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEP,MAAnB;AAA2B,MAAA,SAAS,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AAAO,MAAA,UAAU,EAAEG;AAAnB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAzDQP,G;;KAAAA,G;AA2DT,eAAeA,GAAf","sourcesContent":["import React, {useState, useMemo, useEffect} from 'react'\nimport axios from 'axios'\nimport './styles/App.css'\nimport Table from './components/Table'\nimport InputForm from './components/InputForm'\nimport SortCells from './components/SortCells';\n\n\n// import source from './cars.json'\n\nfunction App() {\n\n  // const dataset = source.map(it => ({\n  //   id: it.id,\n  //   date: it.date,\n  //   title: it.title,\n  //   quantity: it.quantity,\n  //   distance: it.distance\n  // }))\n\n  const [tableCells, setTableCells] = useState([]);\n  const [filter, setFilter] = useState({sort: '', query: ''})\n\n  // const [selectedColumn, setSelectedColumn] = useState('')\n  // const [searchQuery, setSearchQuery] = useState('')\n\n  const sortedCells = useMemo(() => {\n    return filter.sort\n      ? [...tableCells].sort((a, b) => a[filter.sort] >= b[filter.sort])\n      : tableCells;\n  }, [filter.sort, tableCells])\n\n  // const sortedAndSearchedCells = useMemo(() => {\n  //   return sortedCells.filter(tableCell => tableCell.title.includes(searchQuery))\n  // }, [searchQuery, sortedCells])\n\n\n  const createNewCell = (newCell) => {\n    setTableCells([...tableCells, newCell])\n  }\n\n  async function getData() {\n    const response = await axios(\n      \"https://my.api.mockaroo.com/cars.json?key=d8c66fd0\"\n    );\n    setTableCells(response.data)\n  }\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n  // const sortColumns = (column) => {\n  //   setSelectedColumn(column)\n  // }\n\n  // const more = searchQuery > selectedColumn\n  // const less = searchQuery < selectedColumn\n  // const includes = searchQuery.includes(selectedColumn)\n\n  return (\n    <div className=\"App\">\n      <InputForm create={createNewCell} />\n      <SortCells filter={filter} setFilter={setFilter}/>\n      <Table tableCells={sortedCells} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}